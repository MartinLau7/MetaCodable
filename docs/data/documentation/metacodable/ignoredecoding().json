{"kind":"symbol","metadata":{"platforms":[{"name":"Swift","introducedAt":"5.9","beta":false,"unavailable":false,"deprecated":false}],"role":"symbol","symbolKind":"macro","roleHeading":"Macro","title":"IgnoreDecoding()","externalID":"s:11MetaCodable14IgnoreDecodingyycfm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"MetaCodable"}]},"variants":[{"paths":["\/documentation\/metacodable\/ignoredecoding()"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreDecoding","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This macro can be applied to initialized mutable variables to ignore"},{"type":"text","text":" "},{"type":"text","text":"them from decoding."}],"type":"paragraph"},{"syntax":"swift","code":["@IgnoreDecoding","var field: String = \"some\""],"type":"codeListing"},{"inlineContent":[{"text":"The decoding will succeed even if decoding data doesn’t have","type":"text"},{"text":" ","type":"text"},{"text":"any ","type":"text"},{"code":"field","type":"codeVoice"},{"text":" key. Even if ","type":"text"},{"code":"field","type":"codeVoice"},{"text":" key is provided in decoding","type":"text"},{"text":" ","type":"text"},{"text":"data, value of property ","type":"text"},{"code":"field","type":"codeVoice"},{"text":" will not be impacted. But the","type":"text"},{"text":" ","type":"text"},{"text":"encoded data will have ","type":"text"},{"code":"field","type":"codeVoice"},{"text":" key.","type":"text"}],"type":"paragraph"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","isActive":true},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()"},"references":{"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"role":"symbol","title":"CodingKeys(_:)","type":"topic","url":"\/documentation\/metacodable\/codingkeys(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"title":"CodedBy(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/codedby(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Indicates the field needs to be decoded and encoded by","type":"text"},{"text":" ","type":"text"},{"text":"the provided ","type":"text"},{"code":"helper","type":"codeVoice"},{"text":" instance.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"title":"IgnoreDecoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/ignoredecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Indicates the field needs to ignored from decoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable":{"kind":"symbol","url":"\/documentation\/metacodable","title":"MetaCodable","type":"topic","role":"collection","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","abstract":[{"type":"text","text":"Supercharge "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations with macros."}]},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"title":"Codable()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":" types by leveraging custom","type":"text"},{"text":" ","type":"text"},{"text":"attributes provided on variable declarations.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"title":"IgnoreEncoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/ignoreencoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Indicates the field needs to ignored from encoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"title":"IgnoreCodingInitialized()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/ignorecodinginitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Indicates by default initialized properties for the attached type will be","type":"text"},{"text":" ","type":"text"},{"text":"ignored for decoding\/encoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"title":"CodedAt(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/codedat(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"...)"}],"type":"topic","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"title":"IgnoreCoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"text":"Indicates the field needs to ignored from decoding and encoding.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"title":"CodedIn(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/codedin(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"...)"}],"type":"topic","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}]},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"title":"Default(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/metacodable\/default(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Provides a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}]}}}