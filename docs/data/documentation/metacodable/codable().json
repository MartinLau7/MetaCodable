{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"modules":[{"name":"MetaCodable"}],"roleHeading":"Macro","platforms":[{"introducedAt":"5.9","unavailable":false,"deprecated":false,"beta":false,"name":"Swift"}],"title":"Codable()","symbolKind":"macro","externalID":"s:11MetaCodable0B0yycfm"},"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:SE","text":"Encodable"},{"kind":"text","text":", names: named(CodingKeys), named(init(from:)), named(encode(to:))) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Usage","level":1,"anchor":"Usage"},{"type":"paragraph","inlineContent":[{"text":"By default the field name is used as ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field value during","type":"text"},{"text":" ","type":"text"},{"text":"encoding and decoding. Following customization can be done on fields to","type":"text"},{"text":" ","type":"text"},{"text":"provide custom decode and encode behavior:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":" providing single string value as custom coding key."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":" providing multiple string value as nested coding"},{"type":"text","text":" "},{"type":"text","text":"key path."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","type":"reference"},{"text":" with one or more string value as nested container","type":"text"},{"text":" ","type":"text"},{"text":"coding key path, with variable name as coding key.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"reference"},{"type":"text","text":" with no path arguments, when type is composition"},{"type":"text","text":" "},{"type":"text","text":"of multiple "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" types."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","isActive":true,"type":"reference"},{"text":" to provide custom decoding\/encoding behavior for","type":"text"},{"text":" ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" types or implement decoding\/encoding for non-","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" types.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)"},{"type":"text","text":" to provide default value when decoding fails."}]}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","isActive":true,"type":"reference"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","isActive":true,"type":"reference"},{"text":" to ignore specific properties from","type":"text"},{"text":" ","type":"text"},{"text":"decoding\/encoding or both.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","isActive":true},{"type":"text","text":" to work with different case style "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"},{"type":"text","text":" to ignore decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"all initialized properties."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"Effect","level":1,"anchor":"Effect"},{"type":"paragraph","inlineContent":[{"text":"This macro composes extension macro expansion depending on ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"conformance of type:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Extension macro expansion, to confirm to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" ","type":"text"},{"text":"protocols depending on whether type doesnâ€™t already conform to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" respectively.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extension macro expansion, to generate custom "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" type for"},{"type":"text","text":" "},{"type":"text","text":"the attached declaration named "},{"type":"codeVoice","code":"CodingKeys"},{"type":"text","text":" and use this type for"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of both "},{"type":"codeVoice","code":"init(from:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"encode(to:)"},{"type":"text","text":" "},{"type":"text","text":"methods."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If attached declaration already conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" this macro expansion"},{"type":"text","text":" "},{"type":"text","text":"is skipped."}]}]}],"type":"unorderedList"},{"name":"Important","type":"aside","style":"important","content":[{"inlineContent":[{"text":"The attached declaration must be of a struct type.","type":"text"}],"type":"paragraph"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/metacodable\/codable()"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()"],"title":"Macros"}],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"sections":[],"references":{"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","title":"CodedAt(_:)","url":"\/documentation\/metacodable\/codedat(_:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"...)"}],"role":"symbol","type":"topic","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/MemberInit()":{"type":"topic","abstract":[{"type":"text","text":"Generate memberwise initializer(s) of "},{"code":"struct","type":"codeVoice"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemberInit"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/memberinit()","title":"MemberInit()","role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from encoding."}],"title":"IgnoreEncoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/ignoreencoding()","type":"topic","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"abstract":[{"text":"Indicates the field needs to ignored from decoding and encoding.","type":"text"}],"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","kind":"symbol","type":"topic","title":"IgnoreCoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/ignorecoding()"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"text":" ","type":"text"},{"text":"container ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided with field name as final","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"title":"CodedIn(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"...)"}],"url":"\/documentation\/metacodable\/codedin(_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"abstract":[{"text":"Generate ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" implementation of ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"title":"Codable()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/codable()","type":"topic","kind":"symbol","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"abstract":[{"text":"Provides a ","type":"text"},{"type":"codeVoice","code":"default"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","kind":"symbol","type":"topic","title":"Default(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/metacodable\/default(_:)"},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","abstract":[{"type":"text","text":"Supercharge "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":"â€™s "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations with macros."}],"url":"\/documentation\/metacodable","kind":"symbol","type":"topic","role":"collection"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","title":"CodingKeys(_:)","url":"\/documentation\/metacodable\/codingkeys(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Indicates "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"abstract":[{"text":"Indicates the field needs to be decoded and encoded by","type":"text"},{"text":" ","type":"text"},{"text":"the provided ","type":"text"},{"code":"helper","type":"codeVoice"},{"type":"text","text":" instance."}],"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","kind":"symbol","type":"topic","title":"CodedBy(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/metacodable\/codedby(_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","title":"IgnoreCodingInitialized()","url":"\/documentation\/metacodable\/ignorecodinginitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding."}],"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","kind":"symbol","type":"topic","title":"IgnoreDecoding()","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}],"url":"\/documentation\/metacodable\/ignoredecoding()"}}}