{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/ignorecodinginitialized()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)"],"generated":true,"title":"Strategies"}],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","interfaceLanguage":"swift"},"metadata":{"symbolKind":"macro","roleHeading":"Macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}],"title":"IgnoreCodingInitialized()","modules":[{"name":"MetaCodable"}],"platforms":[{"introducedAt":"5.9","unavailable":false,"deprecated":false,"name":"Swift","beta":false}],"externalID":"s:11MetaCodable23IgnoreCodingInitializedyycfm","role":"symbol"},"sections":[],"abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"text":" ","type":"text"},{"text":"ignored for decoding\/encoding.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This macro can be applied to types to ignore decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"all initialized properties of said type:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    let field: String","}"]},{"inlineContent":[{"type":"text","text":"Here "},{"type":"codeVoice","code":"initialized"},{"type":"text","text":" property is ignored from decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"while "},{"type":"codeVoice","code":"field"},{"type":"text","text":" is decoded and encoded."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Initialized properties can explicitly considered for decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"by attaching any coding attributes, i.e. "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":","},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)"},{"type":"text","text":", "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","isActive":true,"type":"reference"},{"text":" etc.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    @CodedIn","    var explicitCode: String = \"coded\"","    let field: String","}"]},{"inlineContent":[{"text":"Here ","type":"text"},{"code":"explicitCode","type":"codeVoice"},{"text":" property is decoded and encoded","type":"text"},{"text":" ","type":"text"},{"text":"while ","type":"text"},{"code":"initialized","type":"codeVoice"},{"text":" is ignored from decoding and encoding.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","isActive":true},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}]}],"type":"aside","name":"Note"},{"style":"important","content":[{"inlineContent":[{"type":"text","text":"This attribute must be used combined with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","name":"Important"}],"kind":"content"}],"references":{"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"kind":"symbol","title":"CodedBy(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by"},{"type":"text","text":" "},{"type":"text","text":"the provided "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" instance."}],"url":"\/documentation\/metacodable\/codedby(_:)"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"kind":"symbol","title":"CodedIn(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/metacodable\/codedin(_:)"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"kind":"symbol","title":"Codable()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","abstract":[{"type":"text","text":"Generate "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"text":"attributes provided on variable declarations.","type":"text"}],"url":"\/documentation\/metacodable\/codable()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"kind":"symbol","title":"IgnoreEncoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","abstract":[{"type":"text","text":"Indicates the field needs to ignored from encoding."}],"url":"\/documentation\/metacodable\/ignoreencoding()"},"doc://MetaCodable/documentation/MetaCodable":{"role":"collection","kind":"symbol","title":"MetaCodable","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","abstract":[{"type":"text","text":"Supercharge "},{"code":"Swift","type":"codeVoice"},{"type":"text","text":"â€™s "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" implementations with macros."}],"url":"\/documentation\/metacodable"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"kind":"symbol","title":"Default(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","abstract":[{"type":"text","text":"Provides a "},{"code":"default","type":"codeVoice"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"url":"\/documentation\/metacodable\/default(_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}],"kind":"symbol","title":"IgnoreDecoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding."}],"url":"\/documentation\/metacodable\/ignoredecoding()"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"kind":"symbol","title":"CodedAt(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"url":"\/documentation\/metacodable\/codedat(_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/metacodable\/ignorecodinginitialized()","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}],"title":"IgnoreCodingInitialized()","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding and encoding."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"kind":"symbol","title":"IgnoreCoding()","url":"\/documentation\/metacodable\/ignorecoding()","type":"topic","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"kind":"text","text":")"}],"kind":"symbol","title":"CodingKeys(_:)","url":"\/documentation\/metacodable\/codingkeys(_:)","type":"topic","role":"symbol"}}}