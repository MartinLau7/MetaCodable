{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/codingkeys(_:)"]}],"abstract":[{"type":"text","text":"Indicates "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}],"seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeyNameStrategy","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The case strategy "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"strategy"}],"kind":"parameters"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions","isActive":true,"type":"reference"},{"type":"text","text":" recommend using camel-case names."},{"type":"text","text":" "},{"type":"text","text":"This macro can be used for types to work with "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"s of different"},{"type":"text","text":" "},{"type":"text","text":"case format while keeping variable names camel-cased."}],"type":"paragraph"},{"inlineContent":[{"text":"For a JSON where keys follow snake-case style:","type":"text"}],"type":"paragraph"},{"syntax":"json","code":["{","  \"product_name\": \"Banana\",","  \"product_cost\": 200,","  \"description\": \"A banana grown in Ecuador.\"","}"],"type":"codeListing"},{"inlineContent":[{"text":"equivalent ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" type can be created that uses keys in camel-case","type":"text"},{"text":" ","type":"text"},{"text":"style:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["@Codable","@CodingKeys(.snake_case)","struct CodableType {","    let productName: String","    let productCost: String","    let description: String","}"],"type":"codeListing"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference","isActive":true},{"text":" macro generated code will transform field names","type":"text"},{"text":" ","type":"text"},{"text":"to snake-case in the ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"The case strategy is only used to transform field names to"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"s. "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"s provided with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","isActive":true},{"type":"text","text":" will remain unchanged."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"},{"content":[{"inlineContent":[{"text":"This macro on its own only validates if attached declaration","type":"text"},{"text":" ","type":"text"},{"text":"is a variable declaration. ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference","isActive":true},{"text":" macro uses this macro","type":"text"},{"text":" ","type":"text"},{"text":"when generating final implementations.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute must be used combined with "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","isActive":true},{"type":"text","text":"."}]}],"style":"important","type":"aside","name":"Important"}],"kind":"content"}],"metadata":{"title":"CodingKeys(_:)","externalID":"s:11MetaCodable10CodingKeysyyAA0C15KeyNameStrategyOcfm","platforms":[{"name":"Swift","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"5.9"}],"modules":[{"name":"MetaCodable"}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}],"roleHeading":"Macro","symbolKind":"macro"},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)"},"references":{"https://www.swift.org/documentation/api-design-guidelines/#general-conventions":{"titleInlineContent":[{"type":"text","text":"Swift API Design Guidelines"}],"type":"link","url":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions","title":"Swift API Design Guidelines","identifier":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions"},"doc://MetaCodable/documentation/MetaCodable/CodingKeyNameStrategy":{"navigatorTitle":[{"kind":"identifier","text":"CodingKeyNameStrategy"}],"abstract":[{"type":"text","text":"The values that determine the equivalent"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" value for a property name."}],"type":"topic","url":"\/documentation\/metacodable\/codingkeynamestrategy","role":"symbol","kind":"symbol","title":"CodingKeyNameStrategy","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeyNameStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeyNameStrategy"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from encoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignoreencoding()","role":"symbol","kind":"symbol","title":"IgnoreEncoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"type":"topic","url":"\/documentation\/metacodable\/codable()","role":"symbol","kind":"symbol","title":"Codable()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignoredecoding()","role":"symbol","kind":"symbol","title":"IgnoreDecoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignorecodinginitialized()","role":"symbol","kind":"symbol","title":"IgnoreCodingInitialized()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/metacodable\/codedin(_:)","role":"symbol","kind":"symbol","title":"CodedIn(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding and encoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignorecoding()","role":"symbol","kind":"symbol","title":"IgnoreCoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"title":"CodingKeys(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","text":"CodingKeyNameStrategy","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}],"type":"topic","url":"\/documentation\/metacodable\/codingkeys(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"title":"CodedAt(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"type":"topic","url":"\/documentation\/metacodable\/codedat(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","role":"collection","abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros."}],"type":"topic","url":"\/documentation\/metacodable","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"title":"Default(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Provides a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"type":"topic","url":"\/documentation\/metacodable\/default(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"title":"CodedBy(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedBy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by"},{"type":"text","text":" "},{"type":"text","text":"the provided "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" instance."}],"type":"topic","url":"\/documentation\/metacodable\/codedby(_:)","kind":"symbol"}}}