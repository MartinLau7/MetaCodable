{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)"},"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/metacodable\/codedin(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"platforms":[{"name":"Swift","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"5.9"}],"symbolKind":"macro","roleHeading":"Macro","modules":[{"name":"MetaCodable"}],"title":"CodedIn(_:)","externalID":"s:11MetaCodable7CodedInyys12StaticStringVd_tcfm","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}]},"kind":"symbol","seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"path","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path of container value located in."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This macro behaves similar to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":" with adding","type":"text"},{"text":" ","type":"text"},{"text":"the field name to the end of ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"If no argument provided for ","type":"text"},{"type":"codeVoice","code":"path"},{"text":", then the field name is chosen","type":"text"},{"text":" ","type":"text"},{"text":"as ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" in the current type’s container. i.e for JSON:","type":"text"}],"type":"paragraph"},{"code":["{ \"field\": \"value\" }"],"syntax":"json","type":"codeListing"},{"inlineContent":[{"text":"the field can be declared as:","type":"text"}],"type":"paragraph"},{"code":["@CodedIn","let field: String"],"syntax":"swift","type":"codeListing"}]},{"content":[{"inlineContent":[{"text":"If one or more arguments are provided, then field is decoded\/encoded","type":"text"},{"text":" ","type":"text"},{"text":"nested by all the arguments as ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" and the field name","type":"text"},{"text":" ","type":"text"},{"text":"as final ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":". i.e for JSON:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{ \"deeply\": { \"nested\": { \"field\": \"value\" } } }"]},{"inlineContent":[{"text":"the field can declare custom key:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@CodedIn(\"deeply\", \"nested\")","let field: String"]}]}],"type":"unorderedList"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}]}],"type":"aside","name":"Note","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Providing no arguments has the same effect as not applying"},{"type":"text","text":" "},{"type":"text","text":"the macro entirely. Warning is generated with diagnostic id"},{"type":"text","text":" "},{"code":"codedin-unused","type":"codeVoice"},{"type":"text","text":" in such case to either remove attribute or"},{"type":"text","text":" "},{"type":"text","text":"provide arguments."}]}],"type":"aside","name":"Note","style":"note"},{"content":[{"inlineContent":[{"text":"The field type must confirm to ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Important","style":"important"}],"kind":"content"}],"references":{"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"title":"CodingKeys(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","text":"CodingKeyNameStrategy","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}],"type":"topic","url":"\/documentation\/metacodable\/codingkeys(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignorecodinginitialized()","role":"symbol","kind":"symbol","title":"IgnoreCodingInitialized()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"title":"CodedAt(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided."}],"type":"topic","url":"\/documentation\/metacodable\/codedat(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignoredecoding()","role":"symbol","kind":"symbol","title":"IgnoreDecoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable":{"title":"MetaCodable","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","role":"collection","abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros."}],"type":"topic","url":"\/documentation\/metacodable","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from encoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignoreencoding()","role":"symbol","kind":"symbol","title":"IgnoreEncoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"title":"Default(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Provides a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"type":"topic","url":"\/documentation\/metacodable\/default(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"title":"CodedBy(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedBy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by"},{"type":"text","text":" "},{"type":"text","text":"the provided "},{"type":"codeVoice","code":"helper"},{"type":"text","text":" instance."}],"type":"topic","url":"\/documentation\/metacodable\/codedby(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/metacodable\/codedin(_:)","role":"symbol","kind":"symbol","title":"CodedIn(_:)","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":"...)","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"type":"topic","url":"\/documentation\/metacodable\/codable()","role":"symbol","kind":"symbol","title":"Codable()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding and encoding."}],"type":"topic","url":"\/documentation\/metacodable\/ignorecoding()","role":"symbol","kind":"symbol","title":"IgnoreCoding()","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}]}}}