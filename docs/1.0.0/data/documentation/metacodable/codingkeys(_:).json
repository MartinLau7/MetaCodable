{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/metacodable\/codingkeys(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","text":"CodingKeyNameStrategy"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"strategy","content":[{"inlineContent":[{"type":"text","text":"The case strategy "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions"},{"type":"text","text":" recommend using camel-case names."},{"type":"text","text":" "},{"type":"text","text":"This macro can be used for types to work with "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s of different"},{"type":"text","text":" "},{"type":"text","text":"case format while keeping variable names camel-cased."}],"type":"paragraph"},{"inlineContent":[{"text":"For a JSON where keys follow snake-case style:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","  \"product_name\": \"Banana\",","  \"product_cost\": 200,","  \"description\": \"A banana grown in Ecuador.\"","}"]},{"inlineContent":[{"text":"equivalent ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" type can be created that uses keys in camel-case","type":"text"},{"text":" ","type":"text"},{"text":"style:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Codable","@CodingKeys(.snake_case)","struct CodableType {","    let productName: String","    let productCost: String","    let description: String","}"]},{"inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference"},{"text":" macro generated code will transform field names","type":"text"},{"text":" ","type":"text"},{"text":"to snake-case in the ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation.","type":"text"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The case strategy is only used to transform field names to"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s. "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"s provided with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":" will remain unchanged."}]}],"name":"Note"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}],"type":"paragraph"}],"name":"Note"},{"style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This attribute must be used combined with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":"."}]}],"name":"Important"}],"kind":"content"}],"metadata":{"role":"symbol","title":"CodingKeys(_:)","roleHeading":"Macro","symbolKind":"macro","externalID":"s:11MetaCodable10CodingKeysyyAA0C15KeyNameStrategyOcfm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"MetaCodable"}],"platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"5.9","name":"Swift","beta":false}]},"seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"abstract":[{"text":"Indicates ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field names will be of the provided","type":"text"},{"text":" ","type":"text"},{"text":"case format.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by"},{"type":"text","text":" "},{"text":"the provided ","type":"text"},{"type":"codeVoice","code":"helper"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"CodedBy(_:)","role":"symbol","url":"\/documentation\/metacodable\/codedby(_:)","type":"topic"},"doc://MetaCodable/documentation/MetaCodable":{"type":"topic","url":"\/documentation\/metacodable","abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros."}],"title":"MetaCodable","role":"collection","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"text":"Indicates the field needs to ignored from decoding.","type":"text"}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"IgnoreDecoding","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/metacodable\/ignoredecoding()","title":"IgnoreDecoding()","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"type":"topic","url":"\/documentation\/metacodable\/ignorecodinginitialized()","abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}],"title":"IgnoreCodingInitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"},"https://www.swift.org/documentation/api-design-guidelines/#general-conventions":{"identifier":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions","url":"https:\/\/www.swift.org\/documentation\/api-design-guidelines\/#general-conventions","type":"link","titleInlineContent":[{"text":"Swift API Design Guidelines","type":"text"}],"title":"Swift API Design Guidelines"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"url":"\/documentation\/metacodable\/codedat(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","title":"CodedAt(_:)"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","title":"Codable()","abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" types by leveraging custom"},{"text":" ","type":"text"},{"text":"attributes provided on variable declarations.","type":"text"}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/metacodable\/codable()"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"abstract":[{"type":"text","text":"Indicates "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" for the field names will be of the provided"},{"text":" ","type":"text"},{"text":"case format.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeys","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/metacodable\/codingkeys(_:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","title":"CodingKeys(_:)"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"type":"topic","url":"\/documentation\/metacodable\/ignorecoding()","abstract":[{"text":"Indicates the field needs to ignored from decoding and encoding.","type":"text"}],"title":"IgnoreCoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCoding","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","url":"\/documentation\/metacodable\/codedin(_:)","type":"topic","title":"CodedIn(_:)","abstract":[{"type":"text","text":"Indicates the field needs to be decoded from and encoded in the"},{"type":"text","text":" "},{"type":"text","text":"container "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"role":"symbol","title":"Default(_:)","url":"\/documentation\/metacodable\/default(_:)","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","kind":"symbol","abstract":[{"text":"Provides a ","type":"text"},{"type":"codeVoice","code":"default"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeyNameStrategy":{"role":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeyNameStrategy","url":"\/documentation\/metacodable\/codingkeynamestrategy","type":"topic","navigatorTitle":[{"text":"CodingKeyNameStrategy","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodingKeyNameStrategy","kind":"identifier"}],"kind":"symbol","title":"CodingKeyNameStrategy","abstract":[{"text":"The values that determine the equivalent","type":"text"},{"text":" ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" value for a property name.","type":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"type":"topic","url":"\/documentation\/metacodable\/ignoreencoding()","abstract":[{"type":"text","text":"Indicates the field needs to ignored from encoding."}],"title":"IgnoreEncoding()","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()"}}}