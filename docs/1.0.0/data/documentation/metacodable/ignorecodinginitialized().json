{"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro can be applied to types to ignore decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"all initialized properties of said type:"}]},{"type":"codeListing","syntax":"swift","code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    let field: String","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here "},{"type":"codeVoice","code":"initialized"},{"type":"text","text":" property is ignored from decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"while "},{"type":"codeVoice","code":"field"},{"type":"text","text":" is decoded and encoded."}]},{"type":"paragraph","inlineContent":[{"text":"Initialized properties can explicitly considered for decoding and encoding","type":"text"},{"text":" ","type":"text"},{"text":"by attaching any coding attributes, i.e. ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","type":"reference"},{"text":",","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","type":"reference"},{"text":" etc.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    @CodedIn","    var explicitCode: String = \"coded\"","    let field: String","}"]},{"type":"paragraph","inlineContent":[{"text":"Here ","type":"text"},{"code":"explicitCode","type":"codeVoice"},{"text":" property is decoded and encoded","type":"text"},{"text":" ","type":"text"},{"text":"while ","type":"text"},{"code":"initialized","type":"codeVoice"},{"text":" is ignored from decoding and encoding.","type":"text"}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}],"type":"paragraph"}],"name":"Note"},{"style":"important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This attribute must be used combined with "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Important"}]}],"variants":[{"paths":["\/documentation\/metacodable\/ignorecodinginitialized()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}],"metadata":{"modules":[{"name":"MetaCodable"}],"externalID":"s:11MetaCodable23IgnoreCodingInitializedyycfm","symbolKind":"macro","roleHeading":"Macro","platforms":[{"name":"Swift","introducedAt":"5.9","deprecated":false,"beta":false,"unavailable":false}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}],"title":"IgnoreCodingInitialized()","role":"symbol"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)"],"title":"Strategies"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"symbol","references":{"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","url":"\/documentation\/metacodable\/ignoredecoding()","kind":"symbol","role":"symbol","type":"topic","title":"IgnoreDecoding()","abstract":[{"text":"Indicates the field needs to ignored from decoding.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"url":"\/documentation\/metacodable\/codedin(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"text":" ","type":"text"},{"text":"container ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided with field name as final","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}],"kind":"symbol","title":"CodedIn(_:)","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"url":"\/documentation\/metacodable\/codedby(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","abstract":[{"text":"Indicates the field needs to be decoded and encoded by","type":"text"},{"text":" ","type":"text"},{"text":"the provided ","type":"text"},{"type":"codeVoice","code":"helper"},{"text":" instance.","type":"text"}],"kind":"symbol","title":"CodedBy(_:)","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","url":"\/documentation\/metacodable\/codedat(_:)","kind":"symbol","role":"symbol","type":"topic","title":"CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}]},"doc://MetaCodable/documentation/MetaCodable":{"url":"\/documentation\/metacodable","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","abstract":[{"text":"Supercharge ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":"â€™s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros.","type":"text"}],"kind":"symbol","title":"MetaCodable","role":"collection"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"url":"\/documentation\/metacodable\/ignorecodinginitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","abstract":[{"text":"Indicates by default initialized properties for the attached type will be","type":"text"},{"text":" ","type":"text"},{"text":"ignored for decoding\/encoding.","type":"text"}],"kind":"symbol","title":"IgnoreCodingInitialized()","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","url":"\/documentation\/metacodable\/codingkeys(_:)","kind":"symbol","role":"symbol","type":"topic","title":"CodingKeys(_:)","abstract":[{"text":"Indicates ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field names will be of the provided","type":"text"},{"text":" ","type":"text"},{"text":"case format.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","url":"\/documentation\/metacodable\/default(_:)","kind":"symbol","role":"symbol","type":"topic","title":"Default(_:)","abstract":[{"text":"Provides a ","type":"text"},{"type":"codeVoice","code":"default"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"url":"\/documentation\/metacodable\/ignoreencoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","abstract":[{"text":"Indicates the field needs to ignored from encoding.","type":"text"}],"kind":"symbol","title":"IgnoreEncoding()","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"title":"Codable()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":" types by leveraging custom","type":"text"},{"text":" ","type":"text"},{"text":"attributes provided on variable declarations.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","url":"\/documentation\/metacodable\/codable()"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","abstract":[{"text":"Indicates the field needs to ignored from decoding and encoding.","type":"text"}],"kind":"symbol","title":"IgnoreCoding()","role":"symbol"}}}