{"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":", names: named(CodingKeys), named(init(from:)), named(encode(to:))) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"Usage","level":1,"text":"Usage"},{"type":"paragraph","inlineContent":[{"text":"By default the field name is used as ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" for the field value during","type":"text"},{"text":" ","type":"text"},{"text":"encoding and decoding. Following customization can be done on fields to","type":"text"},{"text":" ","type":"text"},{"text":"provide custom decode and encode behavior:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"type":"text","text":" providing single string value as custom coding key."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":" providing multiple string value as nested coding","type":"text"},{"text":" ","type":"text"},{"text":"key path.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","isActive":true,"type":"reference"},{"type":"text","text":" with one or more string value as nested container"},{"type":"text","text":" "},{"type":"text","text":"coding key path, with variable name as coding key."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":" with no path arguments, when type is composition","type":"text"},{"text":" ","type":"text"},{"text":"of multiple ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" types.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)"},{"type":"text","text":" to provide custom decoding\/encoding behavior for"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" types or implement decoding\/encoding for non-"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" types."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","isActive":true},{"type":"text","text":" to provide default value when decoding fails."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","type":"reference","isActive":true},{"text":" and","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","type":"reference","isActive":true},{"text":" to ignore specific properties from","type":"text"},{"text":" ","type":"text"},{"text":"decoding\/encoding or both.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","isActive":true,"type":"reference"},{"text":" to work with different case style ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":"s.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"},{"type":"text","text":" to ignore decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"all initialized properties."}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Effect","level":1,"text":"Effect"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro composes extension macro expansion depending on "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"type":"text","text":"conformance of type:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Extension macro expansion, to confirm to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"protocols depending on whether type doesnâ€™t already conform to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" respectively.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Extension macro expansion, to generate custom ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" type for","type":"text"},{"text":" ","type":"text"},{"text":"the attached declaration named ","type":"text"},{"code":"CodingKeys","type":"codeVoice"},{"text":" and use this type for","type":"text"},{"text":" ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of both ","type":"text"},{"code":"init(from:)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"encode(to:)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"methods.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If attached declaration already conforms to "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" this macro expansion"},{"type":"text","text":" "},{"type":"text","text":"is skipped."}]}]}]},{"type":"aside","name":"Important","style":"important","content":[{"inlineContent":[{"text":"The attached declaration must be of a struct type.","type":"text"}],"type":"paragraph"}]}]}],"variants":[{"paths":["\/documentation\/metacodable\/codable()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"metadata":{"modules":[{"name":"MetaCodable"}],"externalID":"s:11MetaCodable0B0yycfm","symbolKind":"macro","roleHeading":"Macro","platforms":[{"name":"Swift","introducedAt":"5.9","deprecated":false,"beta":false,"unavailable":false}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}],"title":"Codable()","role":"symbol"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()"],"title":"Macros"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"symbol","references":{"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","url":"\/documentation\/metacodable\/ignoredecoding()","kind":"symbol","role":"symbol","type":"topic","title":"IgnoreDecoding()","abstract":[{"text":"Indicates the field needs to ignored from decoding.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","url":"\/documentation\/metacodable\/codedat(_:)","kind":"symbol","role":"symbol","type":"topic","title":"CodedAt(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"url":"\/documentation\/metacodable\/codedby(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","abstract":[{"text":"Indicates the field needs to be decoded and encoded by","type":"text"},{"text":" ","type":"text"},{"text":"the provided ","type":"text"},{"type":"codeVoice","code":"helper"},{"text":" instance.","type":"text"}],"kind":"symbol","title":"CodedBy(_:)","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"url":"\/documentation\/metacodable\/ignorecodinginitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","abstract":[{"text":"Indicates by default initialized properties for the attached type will be","type":"text"},{"text":" ","type":"text"},{"text":"ignored for decoding\/encoding.","type":"text"}],"kind":"symbol","title":"IgnoreCodingInitialized()","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable":{"url":"\/documentation\/metacodable","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","abstract":[{"text":"Supercharge ","type":"text"},{"code":"Swift","type":"codeVoice"},{"text":"â€™s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementations with macros.","type":"text"}],"kind":"symbol","title":"MetaCodable","role":"collection"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","url":"\/documentation\/metacodable\/codingkeys(_:)","kind":"symbol","role":"symbol","type":"topic","title":"CodingKeys(_:)","abstract":[{"text":"Indicates ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" for the field names will be of the provided","type":"text"},{"text":" ","type":"text"},{"text":"case format.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CodingKeyNameStrategy","preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"url":"\/documentation\/metacodable\/codedin(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"...)"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"text":" ","type":"text"},{"text":"container ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":" path provided with field name as final","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":".","type":"text"}],"kind":"symbol","title":"CodedIn(_:)","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","url":"\/documentation\/metacodable\/default(_:)","kind":"symbol","role":"symbol","type":"topic","title":"Default(_:)","abstract":[{"text":"Provides a ","type":"text"},{"type":"codeVoice","code":"default"},{"text":" value to be used when decoding fails and","type":"text"},{"text":" ","type":"text"},{"text":"when not initialized explicitly in memberwise initializer(s).","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}]},"doc://MetaCodable/documentation/MetaCodable/MemberInit()":{"kind":"symbol","type":"topic","title":"MemberInit()","abstract":[{"text":"Generate memberwise initializer(s) of ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":" types by leveraging custom","type":"text"},{"text":" ","type":"text"},{"text":"attributes provided on variable declarations.","type":"text"}],"url":"\/documentation\/metacodable\/memberinit()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemberInit","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/MemberInit()","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"url":"\/documentation\/metacodable\/ignoreencoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","abstract":[{"text":"Indicates the field needs to ignored from encoding.","type":"text"}],"kind":"symbol","title":"IgnoreEncoding()","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","abstract":[{"text":"Indicates the field needs to ignored from decoding and encoding.","type":"text"}],"kind":"symbol","title":"IgnoreCoding()","role":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"title":"Codable()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Codable"},{"kind":"text","text":"()"}],"abstract":[{"text":"Generate ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" implementation of ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":" types by leveraging custom","type":"text"},{"text":" ","type":"text"},{"text":"attributes provided on variable declarations.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","url":"\/documentation\/metacodable\/codable()"}}}