{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This macro can be applied to types to ignore decoding and encoding","type":"text"},{"text":" ","type":"text"},{"text":"all initialized properties of said type:","type":"text"}]},{"type":"codeListing","code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    let field: String","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here "},{"code":"initialized","type":"codeVoice"},{"type":"text","text":" property is ignored from decoding and encoding"},{"type":"text","text":" "},{"type":"text","text":"while "},{"code":"field","type":"codeVoice"},{"type":"text","text":" is decoded and encoded."}]},{"type":"paragraph","inlineContent":[{"text":"Initialized properties can explicitly considered for decoding and encoding","type":"text"},{"text":" ","type":"text"},{"text":"by attaching any coding attributes, i.e. ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)"},{"text":",","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)"},{"text":" etc.","type":"text"}]},{"type":"codeListing","code":["@Codable","@IgnoreCodingInitialized","struct CodableType {","    var initialized: String = \"some\"","    @CodedIn","    var explicitCode: String = \"coded\"","    let field: String","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Here ","type":"text"},{"code":"explicitCode","type":"codeVoice"},{"text":" property is decoded and encoded","type":"text"},{"text":" ","type":"text"},{"text":"while ","type":"text"},{"code":"initialized","type":"codeVoice"},{"text":" is ignored from decoding and encoding.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"text":"is a variable declaration. ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()"},{"text":" macro uses this macro","type":"text"},{"text":" ","type":"text"},{"text":"when generating final implementations.","type":"text"}]}],"name":"Note","style":"note"},{"type":"aside","content":[{"inlineContent":[{"text":"This attribute must be used combined with ","type":"text"},{"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"name":"Important","style":"important"}]}],"metadata":{"role":"symbol","externalID":"s:11MetaCodable23IgnoreCodingInitializedyycfm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IgnoreCodingInitialized","kind":"identifier"},{"text":"()","kind":"text"}],"title":"IgnoreCodingInitialized()","symbolKind":"macro","roleHeading":"Macro","platforms":[{"introducedAt":"5.9","name":"Swift","unavailable":false,"deprecated":false,"beta":false}],"modules":[{"name":"MetaCodable"}]},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"kind":"symbol","abstract":[{"text":"Indicates by default initialized properties for the attached type will be","type":"text"},{"text":" ","type":"text"},{"text":"ignored for decoding\/encoding.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/metacodable\/ignorecodinginitialized()"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"},"seeAlsoSections":[{"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)"],"generated":true,"title":"Strategies"}],"references":{"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Provides a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"url":"\/documentation\/metacodable\/default(_:)","title":"Default(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}],"url":"\/documentation\/metacodable\/codingkeys(_:)","title":"CodingKeys(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"text":")","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"kind":"symbol","abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}],"url":"\/documentation\/metacodable\/ignorecodinginitialized()","title":"IgnoreCodingInitialized()","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by"},{"type":"text","text":" "},{"type":"text","text":"the provided "},{"code":"helper","type":"codeVoice"},{"type":"text","text":" instance."}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","title":"CodedBy(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedby(_:)","type":"topic"},"doc://MetaCodable/documentation/MetaCodable":{"role":"collection","abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros."}],"url":"\/documentation\/metacodable","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"topic","kind":"symbol","title":"MetaCodable"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"url":"\/documentation\/metacodable\/codedat(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","title":"Codable()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable()","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding and encoding."}],"url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"title":"IgnoreCoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from encoding."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","title":"IgnoreEncoding()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/ignoreencoding()","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding."}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","title":"IgnoreDecoding()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/ignoredecoding()","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/metacodable\/codedin(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"CodedIn(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","kind":"symbol"}}}