{"kind":"symbol","metadata":{"roleHeading":"Macro","role":"symbol","title":"CodedAt(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":"...)"}],"externalID":"s:11MetaCodable7CodedAtyys12StaticStringVd_tcfm","symbolKind":"macro","platforms":[{"beta":false,"name":"Swift","introducedAt":"5.9","unavailable":false,"deprecated":false}],"modules":[{"name":"MetaCodable"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodedAt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":"...)","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path value located at."}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If single argument provided for ","type":"text"},{"code":"path","type":"codeVoice"},{"text":", then that argument is","type":"text"},{"text":" ","type":"text"},{"text":"chosen as ","type":"text"},{"code":"CodingKey","type":"codeVoice"},{"text":". i.e for JSON:","type":"text"}]},{"code":["{ \"key\": \"value\" }"],"syntax":"json","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"the field can declare custom key:","type":"text"}]},{"code":["@CodedAt(\"key\")","let field: String"],"syntax":"swift","type":"codeListing"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If multiple arguments provided, then field is decoded\/encoded"},{"type":"text","text":" "},{"type":"text","text":"nested by all the arguments as "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":". i.e for JSON:"}]},{"type":"codeListing","code":["{ \"deeply\": { \"nested\": { \"key\": \"value\" } } }"],"syntax":"json"},{"type":"paragraph","inlineContent":[{"text":"the field can declare custom key:","type":"text"}]},{"type":"codeListing","code":["@CodedAt(\"deeply\", \"nested\", \"key\")","let field: String"],"syntax":"swift"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If no arguments provided, then field needs to be directly decoded from"},{"type":"text","text":" "},{"type":"text","text":"and encoded to parent "},{"type":"codeVoice","code":"decoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"encoder"},{"type":"text","text":" respectively rather"},{"type":"text","text":" "},{"type":"text","text":"than at a "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"decoder","type":"codeVoice"},{"type":"text","text":" instance in parent type "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" implementation’s"},{"type":"text","text":" "},{"code":"init(from:)","type":"codeVoice"},{"type":"text","text":" and "},{"code":"encoder","type":"codeVoice"},{"type":"text","text":" instance in parent type "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implementation’s "},{"code":"encode(to:)","type":"codeVoice"},{"type":"text","text":" method is directly passed to field type’s"},{"type":"text","text":" "},{"code":"init(from:)","type":"codeVoice"},{"type":"text","text":" and "},{"code":"encode(to:)","type":"codeVoice"},{"type":"text","text":" method respectively."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using this some core "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" types can be reused across multiple"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations. i.e. for different vehicle types in JSON:"}]},{"code":["[","  {","    \"id\": 5,","    \"name\": \"Maruti Suzuki Dzire\",","    \"type\": \"Sedan\",","    \"brand\": \"Maruti\"","  },","  {","    \"id\": 105,","    \"name\": \"Vande Bharat Express\",","    \"start\": \"Delhi\",","    \"destination\": \"Bhopal\"","  }","]"],"type":"codeListing","syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"text","text":"core "},{"type":"codeVoice","code":"Vehicle"},{"type":"text","text":" model with common properties can be used with"},{"type":"text","text":" "},{"type":"text","text":"specialized "},{"type":"codeVoice","code":"Car"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Train"},{"type":"text","text":" models:"}]},{"code":["@Codable","struct Vehicle {","    let id: Int","    let name: String","}","","@Codable","struct Car {","    @CodedAt","    let base: Vehicle","    let type: String","    let brand: String","}","","@Codable","struct Train {","    @CodedAt","    let base: Vehicle","    let start: String","    let destination: String","}"],"type":"codeListing","syntax":"swift"}]}],"type":"unorderedList"},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This macro on its own only validates if attached declaration"},{"type":"text","text":" "},{"type":"text","text":"is a variable declaration. "},{"type":"reference","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","isActive":true},{"type":"text","text":" macro uses this macro"},{"type":"text","text":" "},{"type":"text","text":"when generating final implementations."}]}],"type":"aside"},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The field type must confirm to "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":"."}]}],"type":"aside"}],"kind":"content"}],"sections":[],"abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"CodingKey"},{"text":" path provided.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/MetaCodable\/documentation\/MetaCodable"]]},"variants":[{"paths":["\/documentation\/metacodable\/codedat(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()"]}],"references":{"doc://MetaCodable/documentation/MetaCodable/IgnoreCoding()":{"role":"symbol","abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding and encoding."}],"url":"\/documentation\/metacodable\/ignorecoding()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCoding"},{"kind":"text","text":"()"}],"title":"IgnoreCoding()","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCoding()","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/CodedIn(_:)":{"role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided with field name as final"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/metacodable\/codedin(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedIn"},{"text":"(","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"CodedIn(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedIn(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable":{"role":"collection","abstract":[{"type":"text","text":"Supercharge "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementations with macros."}],"url":"\/documentation\/metacodable","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable","type":"topic","kind":"symbol","title":"MetaCodable"},"doc://MetaCodable/documentation/MetaCodable/IgnoreEncoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from encoding."}],"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreEncoding"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreEncoding()","title":"IgnoreEncoding()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/ignoreencoding()","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/Codable()":{"abstract":[{"type":"text","text":"Generate "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" implementation of "},{"code":"struct","type":"codeVoice"},{"type":"text","text":" types by leveraging custom"},{"type":"text","text":" "},{"type":"text","text":"attributes provided on variable declarations."}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Codable","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Codable()","title":"Codable()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codable()","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/IgnoreDecoding()":{"abstract":[{"type":"text","text":"Indicates the field needs to ignored from decoding."}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IgnoreDecoding"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreDecoding()","title":"IgnoreDecoding()","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/ignoredecoding()","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodedAt(_:)":{"role":"symbol","abstract":[{"text":"Indicates the field needs to be decoded from and encoded to the","type":"text"},{"type":"text","text":" "},{"code":"CodingKey","type":"codeVoice"},{"type":"text","text":" path provided."}],"url":"\/documentation\/metacodable\/codedat(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedAt"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":"...)"}],"title":"CodedAt(_:)","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedAt(_:)","kind":"symbol"},"doc://MetaCodable/documentation/MetaCodable/IgnoreCodingInitialized()":{"kind":"symbol","abstract":[{"type":"text","text":"Indicates by default initialized properties for the attached type will be"},{"type":"text","text":" "},{"type":"text","text":"ignored for decoding\/encoding."}],"url":"\/documentation\/metacodable\/ignorecodinginitialized()","title":"IgnoreCodingInitialized()","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/IgnoreCodingInitialized()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"IgnoreCodingInitialized"},{"kind":"text","text":"()"}]},"doc://MetaCodable/documentation/MetaCodable/CodedBy(_:)":{"abstract":[{"type":"text","text":"Indicates the field needs to be decoded and encoded by"},{"type":"text","text":" "},{"type":"text","text":"the provided "},{"code":"helper","type":"codeVoice"},{"type":"text","text":" instance."}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodedBy"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodedBy(_:)","title":"CodedBy(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/metacodable\/codedby(_:)","type":"topic"},"doc://MetaCodable/documentation/MetaCodable/CodingKeys(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Indicates "},{"type":"codeVoice","code":"CodingKey"},{"type":"text","text":" for the field names will be of the provided"},{"type":"text","text":" "},{"type":"text","text":"case format."}],"url":"\/documentation\/metacodable\/codingkeys(_:)","title":"CodingKeys(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/CodingKeys(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11MetaCodable21CodingKeyNameStrategyO","kind":"typeIdentifier","text":"CodingKeyNameStrategy"},{"text":")","kind":"text"}]},"doc://MetaCodable/documentation/MetaCodable/Default(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Provides a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" value to be used when decoding fails and"},{"type":"text","text":" "},{"type":"text","text":"when not initialized explicitly in memberwise initializer(s)."}],"url":"\/documentation\/metacodable\/default(_:)","title":"Default(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/MetaCodable\/documentation\/MetaCodable\/Default(_:)","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}